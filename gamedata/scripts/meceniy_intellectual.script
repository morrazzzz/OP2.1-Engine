-- Модуль"Умный Ручной Телепорт"...Меченый(Стрелок)
-- Особенности: 1) Далеко не со всех территорий можно телепортироватся ,2) Если нельзя телепортироватся с этой территории ,то придёт сообщение от Сахарова со списком территорий, откуда можно телепортироватся ,3)Пользоватся телепортом можно только когда ГГ уже выполнит некоторые сюжетные задания,4)Если нельзя пользоватся то также придёт сообщение..
-- отрихтовано by sapsan

local tabl_changers_by_level = {-- налетай! дополняй! нету уровня - нету телепорта туда!
	["l01_escape"] = {
		p_story_id = 99999,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 6306,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 41,	-- game_vertex_id
		p_dest_pos = {-259.61,-13.98,-187.48},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l03_agroprom"] = {
		p_story_id = 99998,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 399163,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 419,	-- game_vertex_id
		p_dest_pos = {182.44876098633,9.1928939819336,-46.267429351807},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l03u_agr_underground"] = {
		p_story_id = 99997,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 4451,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 736,	-- game_vertex_id
		p_dest_pos = {-45.126068115234,-6.4571619033813,-37.66019821167},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l08_yantar"] = {
		p_story_id = 99996,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 53157,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 1480,	-- game_vertex_id
		p_dest_pos = {28.687835693359,-5.943422794342,-272.9033203125},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l05_bar"] = {
		p_story_id = 99995,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 68763,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 1274,	-- game_vertex_id
		p_dest_pos = {276.64755249023,0.055086404085159,-66.742523193359},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l10_radar"] = {
		p_story_id = 99994,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 14611,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 2013,	-- game_vertex_id
		p_dest_pos = {14.053562164307,-1.2424700260162,41.381050109863},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l04_darkvalley"] = {
		p_story_id = 99993,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 212105,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 1025,	-- game_vertex_id
		p_dest_pos = {31.025503158569,-2.9186296463013,-18.474792480469},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l11_pripyat"] = {
		p_story_id = 99992,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 7817,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 2216,	-- game_vertex_id
		p_dest_pos = {-112.93630981445,2.8031325340271,97.108512878418},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l04u_labx18"] = {
		p_story_id = 99991,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 4086,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 1155,	-- game_vertex_id
		p_dest_pos = {5.0796270370483,-12.429841995239,15.65408706665},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l02_garbage"] = {
		p_story_id = 99990,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 272734,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 263,	-- game_vertex_id
		p_dest_pos = {108.47253417969,-2.2334003448486,-264.66119384766},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l07_military"] = {
		p_story_id = 99989,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 83694,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 1852,	-- game_vertex_id
		p_dest_pos = {-243.89454650879,-0.28634393215179,435.28894042969},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	},
	["l06_rostok"] = {
		p_story_id = 99988,	-- STORY_ID нового level_changer (понадобится нам позже)
		p_dest_lv = 8119,	-- level_vertex_id   - идентифицируют уровень, на который level_changer будет перебрасывать игрока 
		p_dest_gv = 1382,	-- game_vertex_id
		p_dest_pos = {-254.47462463379,-5.8917918205261,88.748420715332},	-- координаты точки, в которой на новом уровне окажется игрок
		p_dest_dir = {0.0, 0.0, 0.0},	-- направрение взгляда игрока
		p_silent = 1	-- следует задать 1, чтобы подавить вопрос о смене уровня (автоматический переход)
	}
}
local tabl_levels = {} 

function teleport_pay(num)
	if db.actor:money() >= num then
		lost_money(num)
	end
end

-- наличие опасности в зависимости от уровня сложности
function actor_is_in_danger()
	local difficulty = level.get_game_difficulty()
	local danger_text = "Телепортация при наличии вражеской угрозы невозможна по техническим причинам. Для восстановления функциональности устраните угрозу."

	if difficulty < 2 then
		return false
	else
		return danger.actor_in_danger(danger_text, danger_text, difficulty == 2)
	end
end

function hand_teleporter_use(obj)
	if obj:section() ~= "hand_teleporter" then return end
	
	level.start_stop_menu(level.main_input_receiver(), true)
	amk.spawn_item_in_inv("hand_teleporter")

	if has_info("no_teleport_near_heli_btr") then 
		sms("Телепортация из района скопления вражеских сил невозможна по техническим причинам. Для восстановления функциональности устраните угрозу.", nil, "nano", 20000)
		return
	elseif has_info("kod_vveden_verno") and not has_info("dead_city_atpeshka") then 
		sms("Телепортация временно невозможна по техническим причинам. Попробуйте активировать функцию позднее.", nil, "nano", 20000)
		return
	elseif actor_is_in_danger() then
		return
	elseif db.actor:money() < 5000 then
		sms("Для телепортации недостаточно денег.", nil, "nano", 20000)
		return
	elseif not tabl_changers_by_level[level.name()] then
		soobj()
		return
	elseif db.actor:character_rank() < 5000 then  	
		sms("Для телепортации недостаточно опыта. Повторите попытку после нескольких сложных заданий.", nil, "nano", 20000)
		return
	end

	-- это условие должно быть последним
	if not drrr.weight_ok() then
		if db.god.u[6] then
			-- с включенным анлимитом улетаем
			db.god.c[6] = db.god.c[6]+1
		else
			sms("Телепортация перегруженного человека невозможна по техническим причинам. Снизьте вес или отремонтируйте бронекостюм.", nil, "nano", 20000)
			return
		end
	end
	
	-- Телепортация
	local level_name = level.name()
		
	-- заполняем список имён уровней чтобы можно было выбрать их случайно
	for k,v in pairs(tabl_changers_by_level) do
		table.insert(tabl_levels, k)
	end
	
	local random_level
	repeat
		random_level = math.random(1,#tabl_levels)
	until level_name ~= tabl_levels[random_level] -- исключаем телепортацию на этот же уровень

	lost_money(5000)

	give_info("teleport_started")
	disable_info("no_gravigun")
	
	--sms("Улетели", nil, nil, 10000)
	amk.start_timer("hand_teleporter_jumpto", 3.0, random_level)
end

function jumpTo(random_level)
	local actor = db.actor:position()
	local actor_lvid = db.actor:level_vertex_id()
	local actor_gvid = db.actor:game_vertex_id()
	local level_name = tabl_levels[random_level]
	local level_data = tabl_changers_by_level[level_name]
			
	spawn_level_changer.create_level_changer(level_data.p_story_id, actor, actor_lvid , actor_gvid,
		level_data.p_dest_lv, 
		level_data.p_dest_gv,
		vector():set(level_data.p_dest_pos[1],level_data.p_dest_pos[2],level_data.p_dest_pos[3]),
		vector():set(level_data.p_dest_dir[1], level_data.p_dest_dir[2], level_data.p_dest_dir[3]),
		level_name,
		level_data.p_silent)
end

function soobj()
	local tabl_levels_name = {}
	for k,v in pairs(tabl_changers_by_level) do
		table.insert(tabl_levels_name, game.translate_string(k))
	end
	local levels_name = table.concat(tabl_levels_name, ", ")
	local text = "С этой территории телепортация невозможна. Территории, с которых можно телепортироваться: "..levels_name..".\n"
sms(text, nil, "nano", 10000)
end

function rem()
	local se_obj
	for k,v in pairs(tabl_changers_by_level) do
		se_obj = story_object(v.p_story_id)
		if se_obj then
			release(se_obj, true)
		end
	end

	disable_info("teleport_started")
end
