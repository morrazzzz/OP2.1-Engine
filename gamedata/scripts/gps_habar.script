-- Метки на нычки с хабаром
local max_comments_strings_on_screen = 38 -- сколько строк комментариев максимально влезает в экран на ПДА
local labels = {} -- в таблице ссылки на тайники помеченные маячками, а также реквизиты маячка (время до заряда  и т.д.). содержит всегда актуальные значения
local items_in_box = {}

--  переменные из конфига  misc\gps_habar.ltx
local activity_time = 0
local warning_time = 0
local warning_icons_time = 0
local habar_list_mode = true
local auto_recharge = true
local is_show_quantity = true
local is_update_on_time = true
local is_set_label_on_npc = true
local is_show_health = false
local is_warning_on_death = false
local is_color_and_sort_list = true
local is_gps_update_in_process = false -- для устранения коллизий при "on_actor_update"

function toboolean(_str)
	if string.find(string.lower(_str), "true") or _str == "1" then
		return true
	end
	
	return false
end

function IsHuman(object, class_id)
    local id = class_id
	if not id and object then 
		id = object:clsid()
	end
    if id == clsid.actor or id == clsid.script_stalker or id == clsid.script_trader then
       return true
    end
    return false
end

function IsGameObject(obj)
	local bResult = false
	if (obj and obj.fov) then
		bResult = true
	end
	return bResult
end

-- получим Id тайника если знаем предмет в нем лежащий
function get_inventory_box_id(obj)
	if not obj then
		return
	end
	local aobj = server_object(obj:id())
	if aobj and aobj.parent_id then
		return aobj.parent_id
	end
end

function get_health(npc)
	if npc then
		if IsGameObject(npc) then
			return npc.health
		elseif npc.health then
			return npc:health()
		end
	end
	
	return nil
end

function get_health_str(npc)
	if get_health(npc) <= 0 then
		return "погиб"
	end
	
	return "жив"
end

-- ищем существует-ли item в тайнике box
function is_find_item(boxId, itemId)
	if boxId and itemId and items_in_box and items_in_box[boxId] then
		for i, v in pairs(items_in_box[boxId]) do
			if v.id == itemId then
				return true
			end
		end
	end
	
	return false
end

-- что-то положили в тайник. Проверим, если к нам имеет отношение, добавим к списку. 
function insert_item(boxId, item)
	if boxId and boxId ~= 0 and boxId ~= 65535 and item then
		if not is_find_item(boxId, item.id) then 
			if not items_in_box[boxId] then items_in_box[boxId] = {} end
			table.insert(items_in_box[boxId], {id = item.id, name=item:name()})
		end
	end
end

-- что-то забрали из тайника, почистим нашу таблицу с хабаром
function remove_item(boxId, item, is_need_msg_warning)
	local is_msg_warning = false

	if is_need_msg_warning == nil then
		is_need_msg_warning = true
	end
	
	if boxId and item then
		local itemId = item.id
		if boxId and itemId and items_in_box[boxId] then
			if labels[boxId] then
				is_msg_warning = true
			end
			
			for i, v in pairs(items_in_box[boxId]) do
				if v.id == itemId then
				table.remove(items_in_box[boxId], i)
				end
			end
		end
	end
	
	-- если было ограбление и нет мода Заминированные тайники, предупреждаем ГГ
	if is_need_msg_warning and is_msg_warning and not amk_offline_alife.item_cost then
	  if not IsHuman(server_object(boxId)) then
		local lvname = ""
		if boxId then
			lvname = game.translate_string(object_level_name(server_object(boxId)))
		end
		sms("%c[255,160,160,160]".."ЛОКАЛЬНАЯ СЕТЬ:".."\\n".."%c[255,255,128,128]На территории "..lvname.." обнаружена кража тайника.", nil, nil, 12000, nil, [[sms\net\ukrali_taynik]])
	  end
	  update_gps(nil, nil, boxId)
	end
end

-- считаем кол-во маячков в тайнике
function get_gps_count(boxId)
	if not boxId then
		return 0
	end
	if boxId == 0 or boxId == 65535 then 
		return 0 
	end

	local locObj
	local gps_count = 0
	
	if items_in_box[boxId] then
		for i, v in pairs(items_in_box[boxId]) do
			locObj = server_object(v.id)
			if locObj and locObj:section_name() == "amk_metka" then
				gps_count = gps_count + 1
			end
		end
	end
	
	return gps_count
end

-- соствялем таблицу вещей в тайниках. не используется.
function load_items()
	local aobj
	for i = 1, 65534 do 
		aobj =  server_object(i)
		if aobj and aobj.parent_id and aobj.parent_id ~= 0 and aobj.parent_id ~=65535 then
			if not items_in_box[aobj.parent_id] then items_in_box[aobj.parent_id] = {} end
			table.insert(items_in_box[aobj.parent_id], {id = aobj.id, name=aobj:name()})
		end
	end
end

function get_local_time(gtime)
	gdays = math.floor(gtime / 24);
	ghours = gtime - gdays * 24;
	
	local res = ""
	if gdays > 0 then
		res = tostring(gdays) .. "дн "
	end
	if ghours > 0 then
		res = res .. tostring(ghours) .. "ч"
	end
	
	return string.trim(res)
end

function get_npc_name(box)
	if box then
		return tostring(news_main.get_npc_name(box))
	end
	
	return "'Неизвестный'"
end

function get_npc_presentation(box)
	if box then
		return tostring(news_main.get_npc_name(box) .. " (" .. game.translate_string(news_main.get_npc_community(box)) .. ", " .. game.translate_string(news_main.get_npc_rank(box)))
	end
	
	return get_npc_name(box)
end

-- снимаем метки относящиеся к списку хабара с ящика
function remove_all_spots(boxId)
	if boxId then
		amk.remove_spot_from_map(boxId, "habar_location")
		amk.remove_spot_from_map(boxId, "habar_clear_location")
		amk.remove_spot_from_map(boxId, "habar_location_w")
		amk.remove_spot_from_map(boxId, "habar_clear_location_w")
		amk.remove_spot_from_map(boxId, "gps_stalker")
	end
end

-- удаляем ящик из таблицы тайников с метками
function remove_label(boxId)
	if boxId then
		labels[boxId] = nil 			-- фикс зависа при сейве 
	end
end

-- почистим тайник от удаленных вещей.
function reinit_box(boxId)
	if not boxId or boxId == 0 or boxId == 65535 or not items_in_box then
		return
	end
	
	if items_in_box[boxId] then
		local aobj
		for i, v in pairs(items_in_box[boxId]) do
			if v.id then
				aobj = server_object(v.id)
				if not aobj then
					table.remove(items_in_box[boxId], i)
				elseif aobj.parent_id ~= boxId then
					table.remove(items_in_box[boxId], i)
				end
			end
		end
	end
end

-- перезарядка маячка
function recharge_gps(item, box)
	if not auto_recharge then
		return
	end
	
	if not box then return end
	
	-- если неизвестен тайник, получим его из предмета
	local boxId = nil
	if box then
		boxId = box:id()
	else
		boxId = get_inventory_box_id(item)
	end
	
	-- если предмет не в тайник и не из тайника - не наш случай
	if not boxId then
		return
	end
	if boxId == 0 or boxId == 65535 then 
		return 
	end
	
	-- если метки нет на тайнике,  перезаряжать нечего
	if not labels[boxId] then
		return
	end
	
	-- перезаряка новыми значениями
	labels[boxId].at = activity_time
	labels[boxId].wr = 0 -- не предупреждали о разряде сообщением
	labels[boxId].wi = 0 -- не предупреждали о разряде цветом
	labels[boxId].wt = warning_time
	labels[boxId].wit = warning_icons_time
	labels[boxId].gt = amk.game_hours()
	labels[boxId].upd = amk.game_minutes()
	labels[boxId].wh = 0 -- не предупреждали о гибели npc
	
	amk.save_table("gps_labels", labels)
end

-- Обновляем список хабара, зная или предмет или ящик
function update_gps(item, box, boxId, is_new_metka)

	is_gps_update_in_process = true

	-- если неизвестен тайник, получим его из предмета
	if not boxId then
		if box then
			boxId = box:id()
		else
			boxId = get_inventory_box_id(item)
		end
	end

	if boxId then
		box = server_object(boxId)
	end
	
	-- если предмет не в тайник и не из тайника - не наш случай
	if not boxId then
		is_gps_update_in_process = false
		return
	end

	if not box then
		-- непись мог погибнуть, ну или тайник могли уничтожить (наверное)
		local aobj = server_object(boxId)
		if not aobj then
			remove_label(boxId)
		end
		
		is_gps_update_in_process = false
		return
	end
	
	if boxId == 0 or boxId == 65535 then 
		is_gps_update_in_process = false
		return
	end

	if IsHuman(box) then
		update_gps_stalker(box, boxId, is_new_metka)
	else
		update_gps_habar(boxId)
	end
	
	is_gps_update_in_process = false
end

function update_gps_stalker(box, boxId, is_new_metka)
	local gps_count = get_gps_count(boxId)
	local is_save_table = false
	
	if gps_count > 0 then
		local fl_send_tip_msg = false
		local text_metki = ""
		local gm = amk.game_minutes()
		local gh = amk.game_hours()
		
		-- новая метка, добавляем в таблицу
		if not labels[boxId] then
			-- нет команды помечать сталкера
			if is_new_metka ~= true then
				return
			end
			
			fl_send_tip_msg = true -- надо сообщить что ставим новую метку
			labels[boxId] = {wr = 0, wi = 0, gt = gh, wt = warning_time, at = activity_time, wit = warning_icons_time, upd = gm, wh = 0}
			is_save_table = true
		end

		local npc_name = get_npc_name(box)
		
		-- помеченный погиб, предупредим ГГ
		local aobj = server_object(boxId)
		if is_warning_on_death and aobj and get_health(aobj) <= 0 and labels[boxId].wh == 0 then
			labels[boxId].wh = 1
			is_save_table = true
			sms("%c[255,160,160,160]".."ЛОКАЛЬНАЯ СЕТЬ:".."\\n".."%c[255,255,128,128]Погиб сталкер "..npc_name.." с GPS-маяком.", nil, nil, 30000, nil, [[sms\net\pogib_stalker]])
		end
		
		-- на сталкера вешаем другие метки, чем на тайник
		local text_health = ""
		if is_show_health then
			text_health = ", " .. get_health_str(box)
		end
		text_metki = get_npc_presentation(box) .. text_health .. ")."
		
		local location = "gps_stalker"
		if fl_send_tip_msg then
			amk.send_tip("Установлена метка на сталкера "..get_npc_name(box), nil, nil, 10, "nano")
		end

		--апдейтим список
		remove_all_spots(boxId)
		amk.add_spot_on_map(boxId, location, text_metki)
	else
		remove_all_spots(boxId)
		remove_label(boxId)
		is_save_table = true
	end
	
	if is_save_table then
		amk.save_table("gps_labels", labels)
	end
end

function correct_name(inv_name)
	if inv_name then
		if string.find(inv_name, "Патроны") == 1 then
			return string.trim(string.gsub(inv_name, "Патроны", "П:"))
		elseif string.find(inv_name, "Комбинезон") == 1 then
			return string.trim(string.gsub(inv_name, "Комбинезон", "Комб"))
		elseif string.find(inv_name, "Противорадиационные препараты") == 1 or string.find(inv_name, "Антирадиационные препараты") == 1 then
			return "Антирад"
		elseif string.find(inv_name, "Радость туриста") then
			return "Консерва"
		elseif string.find(inv_name, "Колбаса") == 1 then
			return "Колбаса"
		elseif string.find(inv_name, "Энергетический") == 1 or string.find(inv_name, "Энергетик") == 1 then
			return "Энергетик"
		end
	else
		return ""
	end
	
	return inv_name
end

function get_color(secName)
	if not secName or string.len(secName) == 0 then
		return "%c[default]"
	end
	
	local lsecName = string.lower(secName)
	
	if string.find(lsecName, "wpn_") == 1 then -- нашли оружие
		return "%c[254,243,122,11]" -- оранжевый
	elseif string.find(lsecName, "ammo_") == 1 or string.find(lsecName, "grenade_") == 1 then -- нашли патроны
		return "%c[254,129,129,11]" -- хаки
	elseif string.find(lsecName, "af_") == 1 then -- нашли артефакт
		return "%c[207,255,085,085]" -- красный
	elseif string.find(lsecName, "mutant_") or string.find(lsecName, "part_") or string.find(lsecName, "_cocoon") then -- нашли часть монстра или эмбрион
		return "%c[50,1,150,1]" -- зеленый
	elseif string.find(lsecName, "outfit") or string.find(lsecName, "exo") then -- нашли броник
		return "%c[100,200,200,1]" -- желтый
	elseif string.find(lsecName, "pda") or string.find(lsecName, "flash") then -- нашли пда
		return "%c[208,100,100,255]" --  синий
	end

	return "%c[default]"
end

function update_gps_habar(boxId)
	-- если в тайнике есть метка, апдейтим или ставим список. иначе снимаем маркер
	local gps_count = get_gps_count(boxId)
	if gps_count > 0 then
		local fl_send_tip_msg = false
		local text_metki = ""
		local gm = amk.game_minutes()
		local gh = amk.game_hours()
		
		-- новая метка, добавляем в таблицу
		if not labels[boxId] then
			fl_send_tip_msg = true -- надо сообщить что ставим новую метку
			labels[boxId] = {wr = 0, wi = 0, gt = gh, wt = warning_time, at = activity_time, wit = warning_icons_time, upd = gm, wh = 0}
			amk.save_table("gps_labels", labels)
		end

		--составляем список предметов
		if items_in_box[boxId] then
			local secName, invName, locObj
			local itemsbox = {}
			local is_yes
			
			for i, v in pairs(items_in_box[boxId]) do
				locObj = server_object(v.id)
				if locObj and locObj:section_name() then
					secName = locObj:section_name()
					invName = correct_name(game.translate_string(config:r_string(secName, "inv_name")))
					
					is_yes = false
					for k, kk in pairs(itemsbox) do
						if kk.sn == secName then
							kk.cnt = kk.cnt + 1
							is_yes = true
							break
						end
					end
					
					if not is_yes then
						table.insert(itemsbox, {sn = secName, inv = invName, cnt = 1, clr = get_color(secName)})
					end
				end
			end
			
			-- сортируем по section_name, чтобы список хабара получился с какой-то закономерностью, а не в разброд.
			table.sort(itemsbox, function(a,b) return (a.clr > b.clr) end)
			
			-- лежит только мячок, считаем что тайник пустой
			if #itemsbox == 1 and itemsbox[1].sn == "amk_metka" and itemsbox[1].cnt == 1 then
			else
				local is_one_item_on_string = true
				
				-- если много предметов, выключаем режим "один предмет на строку"
				if #itemsbox > max_comments_strings_on_screen then
					is_one_item_on_string = false
				end
				
				-- формируем текст метки
				local all_cnt = 0
				local color_code  = ""
				for i, v in pairs(itemsbox) do
					if not (v.sn == "amk_metka" and v.cnt == 1) then
						if is_color_and_sort_list then
							color_code = v.clr
						end
						
						if is_one_item_on_string then
							if text_metki ~= "" then 
								text_metki = text_metki .. "\\n"
							end
							text_metki = text_metki .. color_code .. v.inv
						else
							if text_metki ~= "" then 
								text_metki = text_metki .. ", "
							end
							text_metki = text_metki .. game.translate_string(color_code .. v.inv)
						end
						
						if is_show_quantity then
							if v.cnt > 1 then 
								text_metki = text_metki .. "(" .. tostring(v.cnt) .. ")"
							end
							all_cnt = all_cnt + v.cnt
						end
					end
				end

				if is_show_quantity then 
					text_metki = text_metki .. "\\n%c[255,255,255,255]Итого " .. tostring(all_cnt) .. " предм" 
				end
			end
		end

	
		--смотрим какого цвета нужны иконки
		local is_warning = false
		local labels_item = labels[boxId]
		if habar_list_mode and labels_item.at > 0 and labels_item.wit > 0 and ((gh - labels_item.gt) >= (labels_item.at - labels_item.wit)) then
			is_warning = true
		end
		
		local location = ""
		-- смотрим пустой тайник или есть что-то?
		if text_metki == "" then
			if fl_send_tip_msg then
				amk.send_tip("В схроне нет хабара. Установлена метка пустого тайника.", nil, nil, 10, "nano")
			end
			if is_warning then
				location = "habar_clear_location_w"
			else
				location = "habar_clear_location"
			end
			
			text_metki = "Пустой тайник."
		else
			text_metki = text_metki .. "."
			if fl_send_tip_msg then
				amk.send_tip("Установлена метка со списком хабара.", nil, nil, 10, "nano")
			end
			if is_warning then
				location = "habar_location_w"
			else
				location = "habar_location"
			end
		end
		
		-- добавим инфу о разряде
		if habar_list_mode and labels_item.at > 0 then
			text_metki = get_local_time(labels_item.gt + labels_item.at - gh) .. ". " .. text_metki
		end
		
		--апдейтим список
		remove_all_spots(boxId)
		amk.add_spot_on_map(boxId, location, text_metki)
	else
		remove_all_spots(boxId)
		remove_label(boxId)
		amk.save_table("gps_labels", labels)
	end
end

function update_gps_state()
	local is_save_table = false
	
	-- если юзаем режим разряда маячков
	if habar_list_mode then
		local aobj, lvname
		local gm = amk.game_minutes()
		local gh = amk.game_hours()
		
		for i, v in pairs(labels) do
			-- если надо предупредить о разряде сообщением
			if v.at > 0 and v.wt > 0 and v.wr == 0 and gh - v.gt > v.at - v.wt then
				aobj = server_object(i)
				lvname = ""
				if aobj then
					lvname = game.translate_string(object_level_name(aobj))
				end

				v.wr = 1
				amk.send_tip("%c[255,255,128,128]Через "..tostring(gh-v.gt).." ч. на маячке на территории "..lvname.." надо сменить батарею.", nil, nil, 30, "nano")
				is_save_table = true
			end
			
			-- апдейтим информацию каждые 3 минуты или если надо предупредить о разряде сменой иконок
			if (gm - v.upd > 3 and is_update_on_time) or (v.wit > 0 and v.wi == 0 and gh - v.gt > v.at - v.wit) then
				v.wi = 1
				v.upd = gm;
				
				if not is_gps_update_in_process then
					update_gps(nil, nil, i)
				end
				is_save_table = true
			end
			
			-- если время вышло, выключаем метку
			if v.at > 0 and gh - v.gt > v.at then
				aobj = server_object(i)
				lvname = ""
				if aobj then
					lvname = game.translate_string(object_level_name(aobj))
				end
				amk.send_tip("%c[255,255,128,128]На маячке на территории "..lvname.." села батарея. Связь потеряна.", nil, nil, 30, "nano")

				remove_all_spots(i)
				remove_label(i)
				is_save_table = true
			end	
		end
	end
	
	if is_save_table then
		amk.save_table("gps_labels", labels)
	end
end

function show_dlg_dots_npc(obj)
	if not obj or not is_set_label_on_npc then
		return
	end

	-- это не маячок или маячок, но лежит на улице или у ГГ в инвентаре, заканчиваем
	local secName = obj:section()
	local boxId = get_inventory_box_id(obj)
	if not boxId or boxId == 0 or boxId == 65535 or not secName or secName ~= "amk_metka" then
		return
	end
	
	-- маячок попал не сталкеру или метка уже установлена, заканчиваем.
	local box = server_object(boxId)
	if not box then 
		return
	end
	if not IsHuman(box) or labels[boxId] then
		return
	end
	
	local spwn=ui_gps_trade.gps_trade(hud, boxId)
	level.start_stop_menu(spwn,true)
end

-- вызываем из amk.script
-- при загрузке игры
function on_game_load()

	local gps_ini = ini_file("misc\\gps_habar.ltx")
	
	activity_time = tonumber(gps_ini:r_string("amk_metka", "activity_time"))
	warning_time = tonumber(gps_ini:r_string("amk_metka", "warning_time"))
	warning_icons_time = tonumber(gps_ini:r_string("amk_metka", "warning_icons_time"))
	habar_list_mode = toboolean(gps_ini:r_string("amk_metka", "habar_list_mode"))
	auto_recharge = toboolean(gps_ini:r_string("amk_metka", "auto_recharge"))
	is_show_quantity = toboolean(gps_ini:r_string("amk_metka", "show_quantity"))
	is_update_on_time = toboolean(gps_ini:r_string("amk_metka", "update_on_time"))
	is_color_and_sort_list = toboolean(gps_ini:r_string("amk_metka", "color_and_sort_list"))
	
	-- метки на сталкерах
	is_set_label_on_npc = toboolean(gps_ini:r_string("amk_metka", "set_label_on_npc"))
	is_show_health = toboolean(gps_ini:r_string("amk_metka", "show_health"))
	is_warning_on_death = toboolean(gps_ini:r_string("amk_metka", "warning_on_death"))
	
	-- загружаем таблицу привязки ящиков к меткам.
	labels = amk.load_table("gps_labels")

	-- заполняем таблицу хабара в помеченных тайниках, фикс неотображения на метках некоторых предметов
	local aobj
	for i = 1, 65534 do 
		aobj = server_object(i)
		if aobj and aobj.parent_id and labels[aobj.parent_id] then
			insert_item(aobj.parent_id, aobj)
		end
	end
end

--колбэк на взятие предмета в инвентарь ГГ
-- вызываем из amk.script
function on_item_take(item)
	-- если взяли метку, проверяем всех помеченных. вдруг меку купили у одного из них.
	if item and item:section() and item:section() == "amk_metka" then
		for i, v in pairs(labels) do
			reinit_box(i)
			update_gps(nil, nil, i)
		end
	end
end

function on_item_take_from_box(box, item)
	-- если удалили из ящика почистим items_in_box
	if item and item:id() and box and box:id() then
		remove_item(box:id(), server_object(item:id()), false)
	end
	
	recharge_gps(item, box)
	update_gps(item, box, nil)
end

--колбэк на потерю предмета из инвентаря ГГ
-- вызываем из amk.script
function on_item_drop(obj)
	if has_info("biznes_remove_special_item") then return end

	if obj and obj:id() then
		insert_item(get_inventory_box_id(obj), server_object(obj:id()))
	end

	show_dlg_dots_npc(obj)
	recharge_gps(obj, nil)
	update_gps(obj, nil, nil)
end
