-- Отрезание запчастей монстров ножом и озвучка. Для отрезания достаточно, чтобы нож был в рюкзаке.
local monster = nil
local snd = nil

-- Ножи, которыми можно отрезать
local knives = {
	"wpn_addon_shtyk_nozh",
	"wpn_bat_a",
	"wpn_bat_b",
	"wpn_elf",
	"wpn_knif2",
	"wpn_knif3",
	"wpn_knif4",
	"wpn_knifa",
	"wpn_knife",
	"wpn_knife_m",
	"wpn_knife_n",
	"wpn_knife_new",
	"wpn_machete",
	"wpn_kukri",
	"wpn_topor",
}

function on_part_take(obj)
	if not monster or not rx_utils.read_from_ini(nil, obj:section(), "monster_part", false, 0) then return end

	if actor_has_knife() then
		local difficulty = level.get_game_difficulty()
		if difficulty > 0 then
			bind_actor.hide_weapon("monster_parts")
			--snp.move_off() -- обездвиживание отключено
			amk.remove_timer("monster_parts")
			amk.start_timer("monster_parts", difficulty*2, 0)
			--amk.start_timer("move_on", difficulty, 0) -- обездвиживание отключено
		end
		
		level.start_stop_menu(level.main_input_receiver(), true)
		if snd and snd:playing() then
			snd:stop()
		end
		snd = voice("zwuk\\inv_mutant_loot_"..math.random(1,9))
		snd:play_at_pos(db.actor, vector(), 0, sound_object.s2d)
		archievements.acv_count_event("acv_gvdr", 500, "Живодёр") 

	else
		sms("Для срезания запчасти в рюкзаке должен быть нож.", nil, "nano", 5000)
		db.actor:transfer_item(obj, monster)
	end
end

function actor_has_knife()
	for i, section in ipairs(knives) do
		if db.actor:object(section) then
			return true
		end
	end
	return false
end

function on_monster_use(victim, who)
	monster = victim
end

function on_monster_stop_use()
	monster = nil
end

function restore_weapon()
	bind_actor.restore_weapon("monster_parts")
end

function move_on()
	snp.move_on()
end