--мод "stco system" версия 0.7.1

local device_active = false
local direct_value,direct_name, compass_arr, line_v, line_h, compass_bg, lon_st,lat_st,alt_st,time_st_st,time_utc_st, lon_st_name,lat_st_name,alt_st_name,time_st_st_name,time_utc_st_name-- = nil
local longtitude, latitude, altitude = 0,0,0
local arrow_dir_save = 1
local center_x = 512 -- 1024/2
local center_y = 484 -- 768/2 + 110
local inert = 20 --35

local	crd_loc={
--stalker SoC
	["l01_escape"]={24.2424,51.5151,170,"Кордон"},
--	["l02_garbage"]={0,0,0,"Свалка"},
	["l03_agroprom"]={24.2424,51.5151,180,"Агропром"},
--	["l03u_agr_underground"]={0,0,0,"Подземелье Агропрома"},
	["l04_darkvalley"]={24.2424,51.5151,185,"Тёмная Долина"},
--	["l04u_labx18"]={0,0,0,"Лаборатория Х-18"},
--	["l05_bar"]={0,0,0,"Бар"},
--	["l06_rostok"]={0,0,0,"Росток"},
--	["l08_yantar"]={0,0,0,"Янтарь"},
--	["l08u_brainlab"]={0,0,0,"Лаборатория Х-16"},
--	["l07_military"]={0,0,0,"Армейские Склады"},
--	["l10_radar"]={0,0,0,"Радар"},
--	["l10u_bunker"]={0,0,0,"Бункер"},
--	["l11_pripyat"]={0,0,0,"Припять"},
--	["l12_stancia"]={0,0,0,"ЧАЭС-1"},
--	["l12u_sarcofag"]={0,0,0,"Саркофаг"},
--	["l12u_control_monolith"]={0,0,0,"Контроль Монолита"},
--	["l12_stancia_2"]={0,0,0,"ЧАЭС-2"},
--	["atp_for_test22"]={0,0,0,""},
--	["peshera"]={0,0,0,"Пещера 1"},
--	["puzir"]={0,0,0,"Пузырь"},
--	["aver"]={0,0,0,"Лесная чаща"},
--	["av_peshera"]={0,0,0,"Пещера 2"},
--	["limansk"]={0,0,0,"Лиманск"},
--	["hospital"]={0,0,0,"Госпиталь"},
--	["generators"]={0,0,0,"Генераторы"},
--	["warlab"]={0,0,0,"Лаборатория Х"},
--	["red_forest"]={0,0,0,"Красный лес"},
--	["lost_village"]={0,0,0,"Потерянная деревня"},
--	["marsh"]={0,0,0,"Болота"},
	["dead_city"]={24.2424,51.5151,185,"Мёртвый город"},
--stalker CoP
--	["zaton"]={0,0,0,"Затон"},
--	["jupiter"]={0,0,0,"Юпитер"},
--	["pripyat"]={24.1167,51.5,164,"Припять из ЗП"},
--no location
	["no_loc"]={0,0,0,"нет сигнала СП!"}
}

function statics_on()
	direct_name = hud:AddCustomStatic("hud_direct_name",true):wnd()
	direct_value = hud:AddCustomStatic("hud_direct_value",true):wnd()

	lon_st = hud:AddCustomStatic("hud_lon",true):wnd()
	lat_st = hud:AddCustomStatic("hud_lat",true):wnd()
	alt_st = hud:AddCustomStatic("hud_alt",true):wnd()
	lon_st_name = hud:AddCustomStatic("hud_lon_name",true):wnd()
	lat_st_name = hud:AddCustomStatic("hud_lat_name",true):wnd()
	alt_st_name = hud:AddCustomStatic("hud_alt_name",true):wnd()

	time_st_st = hud:AddCustomStatic("hud_time_st",true):wnd()
	time_utc_st = hud:AddCustomStatic("hud_time_utc",true):wnd()
	time_st_st_name = hud:AddCustomStatic("hud_time_st_name",true):wnd()
	time_utc_st_name = hud:AddCustomStatic("hud_time_utc_name",true):wnd()

	compass_bg = hud:AddCustomStatic("hud_compass_bg",true):wnd()
	line_v = hud:AddCustomStatic("hud_compass_line_v",true):wnd()
	line_h = hud:AddCustomStatic("hud_compass_line_h",true):wnd()
	compass_arr = hud:AddCustomStatic("hud_compass_arrow",true):wnd()
	
	console:execute("hud_crosshair_dist 1")
end

function statics_off()
	hud:RemoveCustomStatic("hud_direct_name")
	hud:RemoveCustomStatic("hud_direct_value")

	hud:RemoveCustomStatic("hud_lon")
	hud:RemoveCustomStatic("hud_lat")
	hud:RemoveCustomStatic("hud_alt")
	hud:RemoveCustomStatic("hud_lon_name")
	hud:RemoveCustomStatic("hud_lat_name")
	hud:RemoveCustomStatic("hud_alt_name")
	
	hud:RemoveCustomStatic("hud_time_st")
	hud:RemoveCustomStatic("hud_time_utc")
	hud:RemoveCustomStatic("hud_time_st_name")
	hud:RemoveCustomStatic("hud_time_utc_name")

	hud:RemoveCustomStatic("hud_compass_bg")
	hud:RemoveCustomStatic("hud_compass_line_h")
	hud:RemoveCustomStatic("hud_compass_line_v")
	hud:RemoveCustomStatic("hud_compass_arrow")
	
	console:execute("hud_crosshair_dist 0")
end

function EOT(yy,mm,dd)
	local ndy = {[1]={0,0},[2]={31,31},[3]={59,60},[4]={90,91},[5]={120,121},[6]={151,152},[7]={181,182},[8]={212,213},[9]={243,244},[10]={273,274},[11]={304, 305},[12]={334,335}}
	local tmp = ndy[mm][1]+dd
	tmp = 2*math.pi*(tmp-81)/364
	tmp = (9.87*math.sin(2*tmp)-7.53*math.cos(tmp)-1.5*math.sin(tmp))/60-- в часах
	return tmp
end

function m_in_glon(lat_grad)
--	local R = 6378136.3
	local ming = (2 * math.pi * 6378136.3 * math.cos(lat_grad * math.pi / 180)) / 360
	return ming
end


function time_crd(tzoff)
	local yy,mm,dd,hh,mn,sc,msc=0,0,0,0,0,0,0
	game.get_game_time():get(yy,mm,dd,hh,mn,sc,msc)
	local ST = dd + hh/24 + mn/1440 + sc/86400 + msc/86400000
	local time_lon = longtitude  / 360 -- В ДНЯХ !
	local time_EOT = EOT(yy,mm,dd) / 24 -- В ДНЯХ !
	local time_zone = math.ceil(longtitude/15-0.5)-- /24 -- В ДНЯХ !

	local UTC_dd = ST - time_lon + time_EOT + time_zone/24-- + 10/1440
		if UTC_dd < 0 then
			UTC_dd = UTC_dd - 1
		elseif UTC_dd >= 24 then
			UTC_dd = UTC_dd + 1
		end
	local UTC_hh = (UTC_dd - math.floor(UTC_dd))*24
	local UTC_mn = (UTC_hh - math.floor(UTC_hh))*60
	local UTC_sc = (UTC_mn - math.floor(UTC_mn))*60
	local UTC_ssc = (UTC_sc - math.floor(UTC_sc))*100

	UTC_dd = math.floor(UTC_dd)
	UTC_hh = math.floor(UTC_hh)
	UTC_mn = math.floor(UTC_mn)
	UTC_sc = math.floor(UTC_sc)
	UTC_ssc = math.floor(UTC_ssc)

	if UTC_dd < 10 then UTC_dd = "0"..UTC_dd end
	if UTC_hh < 10 then UTC_hh = "0"..UTC_hh end
	if UTC_mn < 10 then UTC_mn = "0"..UTC_mn end
	if UTC_sc < 10 then UTC_sc = "0"..UTC_sc end

	if mm < 10 then mm = "0"..mm end
	if dd < 10 then dd = "0"..dd end
	if hh < 10 then hh = "0"..hh end
	if mn < 10 then mn = "0"..mn end
	if sc < 10 then sc = "0"..sc end

	if time_zone == 0 then time_zone = -time_zone
	elseif time_zone > 0 then time_zone = "+"..time_zone
	end
	if tzoff == "tz_off" then time_zone = "?" end

	time_st_st_name:SetText("время:")
	time_st_st:SetText(hh..":"..mn..":"..sc)
	time_utc_st_name:SetText("UTC(SU)("..time_zone..")")
	time_utc_st:SetText(yy.."."..mm.."."..UTC_dd.."."..UTC_hh.."."..UTC_mn.."."..UTC_sc)
end

function space_crd(loc)
	local lon0,lat0,alt0,pos = crd_loc[loc][1], crd_loc[loc][2], crd_loc[loc][3], screen.cam_pos
	local lon_sign, lon_grad, lon_min, lon_sec, lon_ssec, lat_sign, lat_grad, lat_min, lat_sec, lat_ssec, alt
	local lat,lon,alt = pos.z,pos.x,pos.y
	local lat_grad = lat0 + lat / 111319.479
	latitude = lat_grad
	local minglon = m_in_glon(lat_grad)
	local lat_sign, lat_min, lat_sec, lat_ssec
	if lat_grad > 0 then
		lat_sign = 1
	elseif lat_grad < 0 then
		lat_sign = -1
		lat_grad = -lat_grad
	else
		lat_sign = 0
	end
	lat_min = (lat_grad - math.floor(lat_grad)) * 60
	lat_sec = (lat_min - math.floor(lat_min)) * 60
	lat_ssec = (lat_sec - math.floor(lat_sec)) * 100
	lat_grad = math.floor(lat_grad)
	lat_min = math.floor(lat_min)
	lat_sec = math.floor(lat_sec)
	lat_ssec = math.floor(lat_ssec)
	local lon_grad = lon0 + lon / minglon
	longtitude = lon_grad -- для часов
	local lon_sign, lon_min, lon_sec, lon_ssec
	if lon_grad > 0 then
		lon_sign = 1
	elseif lon_grad < 0 then
		lon_sign = -1
		lon_grad = -lon_grad
	else
		lon_sign = 0
	end
	lon_min = (lon_grad - math.floor(lon_grad)) * 60
	lon_sec = (lon_min - math.floor(lon_min)) * 60
	lon_ssec = (lon_sec - math.floor(lon_sec)) * 100
	lon_grad = math.floor(lon_grad)
	lon_min = math.floor(lon_min)
	lon_sec = math.floor(lon_sec)
	lon_ssec = math.floor(lon_ssec)
	alt = math.ceil(alt0 + alt)
	if lon_min < 10 then lon_min = "0"..lon_min end
	if lat_min < 10 then lat_min = "0"..lat_min end
	if lon_sec < 10 then lon_sec = "0"..lon_sec end
	if lat_sec < 10 then lat_sec = "0"..lat_sec end
	if lon_ssec < 10 then lon_ssec = "0"..lon_ssec end
	if lat_ssec < 10 then lat_ssec = "0"..lat_ssec end
	if lon_sign > 0 then lon_sign = " " elseif lon_sign < 0 then lon_sign = "-" else lon_sign = " " end
	if lat_sign > 0 then lat_sign = " " elseif lat_sign < 0 then lat_sign = "-" else lat_sign = " " end
	lon_st_name:SetText("долгота:")
	lat_st_name:SetText("широта:")
	alt_st_name:SetText("высота:")
	lon_st:SetText(lon_sign..lon_grad.."°"..lon_min.."'"..lon_sec.."''."..lon_ssec)
	lat_st:SetText(lat_sign..lat_grad.."°"..lat_min.."'"..lat_sec.."''."..lat_ssec)
	alt_st:SetText(alt.." м.")
end

function compass()
	local dir = screen.cam_dir

	local sin_x = dir.x
	local sin_z = dir.z
	local sin_y = dir.y

	local P = dir:getP()
	local arrow_dir
	local balans_y

	if math.abs(P) < 0.04 then -- горизонтальный рабочий диапазон

			if sin_z > 0 then
				arrow_dir = math.asin(sin_x)
				if arrow_dir < 0 then arrow_dir = arrow_dir + 2 * math.pi end
			else
				arrow_dir = math.pi - math.asin(sin_x)
			end
			-- угол получили
			--теперь задемпфируем вращение
			local dirdif = arrow_dir-arrow_dir_save
			if dirdif < math.pi and dirdif > -math.pi then
				arrow_dir = arrow_dir_save + dirdif / inert
			else
				if arrow_dir > arrow_dir_save then
					arrow_dir = arrow_dir_save - (2*math.pi - arrow_dir + arrow_dir_save) / inert
					if arrow_dir < 0 then arrow_dir = 2*math.pi end
				else
					arrow_dir = arrow_dir_save + (2*math.pi +dirdif) / inert
					if arrow_dir > 2*math.pi then arrow_dir = 0 end
				end
			end
			--вращение задемпфировали
			arrow_dir_save = arrow_dir -- запомним текущее значение направления
			balans_y = 400 * P -- увеличим чувствительность вывода баланса
	else
		-- если баланс заткнулся, то...
		balans_y = (P > 0) and 8 or -8
	end
	line_v:SetWndPos(center_x, center_y + balans_y)
	compass_arr:SetHeading(arrow_dir_save)
	local num_1, num_2 = 0, 0
	num_1, num_2 = math.modf(math.deg(arrow_dir_save))
	num_2 =  math.floor(num_2 * 10)
	direct_value:SetText(num_1.."."..num_2)
	direct_name:SetText("направление:")
	-- компас отработал.
end

function update(obj)
	local item = db.actor:active_item()
	if item and item:section() == "stco" then
		if not device_active then
			device_active = true
			statics_on()
		end 
		compass()
		local loc = level:name()
		if crd_loc[loc] then
			space_crd(loc)
			time_crd()
			else
			lon_st:SetText("Нет сигнала СП! ")
			lat_st:SetText("Время в автономном")
			alt_st:SetText("режиме!     ")
			time_crd("tz_off")
		end
	elseif device_active then
		device_active = false
		statics_off()
	end
end
