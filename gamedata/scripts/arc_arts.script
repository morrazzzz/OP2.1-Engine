local cfg_arts = {}
local inv_arts = {}

local ballast_weight = 0

function get_cfg_arts_number()
  return table.getn(cfg_arts)
end

function get_inv_arts_number(art_index)
  return inv_arts[art_index]
end

function get_art_index(art_section)
  for i = 1, get_cfg_arts_number() do
    if cfg_arts[i].section == art_section then
      return i
    end
  end
  return 0
end

function get_art_section(art_index)
  return cfg_arts[art_index].section
end

function get_art_texture(art_index)
  return cfg_arts[art_index].tx, cfg_arts[art_index].ty
end

function get_art_inv_rad(art_index)
  return cfg_arts[art_index].inv_rad
end

function get_inv_rad_sect(art_sect)
	return cfg_arts[get_art_index(art_sect)].inv_rad
end

function get_art_weight(art_index)
  return cfg_arts[art_index].weight
end

function register_artefact(art_section, number, in_container)
  local f = get_art_index(art_section)

  if f==0 then
    local ini = config

    if ini:section_exist(art_section) then
      local class = ini:r_clsid(art_section, "class")

      if class == clsid.artefact or class == clsid.artefact_s then -- clsid.artefact == 39. (кроме af_electra_*)
        local tmp = {}

        tmp.section = art_section
        tmp.belt_rad = ini:r_float(art_section, "radiation_restore_speed")
        if ini:line_exist(art_section, "inventory_radiation") then
          tmp.inv_rad = ini:r_float(art_section, "inventory_radiation")
        else
          tmp.inv_rad = math.max(tmp.belt_rad,0)
        end
        tmp.tx = ini:r_u32(art_section, "inv_grid_x")
        tmp.ty = ini:r_u32(art_section, "inv_grid_y")
        tmp.weight = ini:r_float(art_section, "inv_weight")

        table.insert(cfg_arts, tmp)
        f = table.getn(cfg_arts)

        arc.info(list_cfg_arts(),1)

        if not in_container then
          table.insert(inv_arts, number)
          arc.info(list_inv_arts(),1)
          arc_radiation.change_inv_arts_radiation(number*cfg_arts[f].inv_rad)
        else
          table.insert(inv_arts, 0)
          arc_ballast.change_ballast(number*cfg_arts[f].weight)
        end
      end
    end
  else -- если арт уже в cfg_arts[]
    if not in_container then
      inv_arts[f]=inv_arts[f] + number
      arc.info(list_inv_arts(),1)
      arc_radiation.change_inv_arts_radiation(number*cfg_arts[f].inv_rad)
    else
      arc_ballast.change_ballast(number*cfg_arts[f].weight)
    end
  end

  return f
end

function list_cfg_arts()
  local s = "cfg_arts = "
  
  for i=1, get_cfg_arts_number() do
    local c = cfg_arts[i]
--    s = s.."\n s=["..c.section.."], b_r="..c.belt_rad..", i_r="..c.inv_rad.."; tx=["..c.tx..","..c.ty.."], w="..c.weight
    s = s.."["..c.section.."] "
  end
  
  return s
end

function list_inv_arts()
  return "inv_arts = {"..table.concat(inv_arts, ",").."}"
end
