-- скрипт прозрачных рюкзаков

local convert_visual = {}
local callbackFuncs={}

function add_to_convert(id,onlineCallack,params) --регистрация для обновления визуала с колбеком
	convert_visual[id]="turn_off"
	if onlineCallack then
		callbackFuncs[id]={func=onlineCallack,funcParams=params}
	end
end

-- подменяемый ли визуал?
function IsChangeable(section)
	return (string.sub(section,2,15)=="_inventory_box" and string.find(rx_utils.read_from_ini(nil, section, "visual", "", 1), "item_rukzak")) or
		string.sub(section,1,11)=="val_taynik_" or 
		rx_utils.read_from_ini(nil, section, "removable", false, 0)
end
-- подбираемый ли рюкзак?
function IsTaken(section)
	return IsChangeable(section) or string.find(rx_utils.read_from_ini(nil, section, "visual", "", 1), "rukzak_invisible")
end

-- перебор рюкзаков, вызывается при смене сложности
function scan()
	if level.present() then
		-- игра загружена

		local box
		for id,obj in pairs(db.storage) do
			box = level_object(id)
			if box and IsChangeable(box:section()) then
				change_visual(box)
			end
		end
	end
end

function net_spawn(box)
	if IsChangeable(box:section()) then
		if db.treasure_change_visual[box:id()] then
			-- уже заменили визуал
			db.treasure_change_visual[box:id()] = nil
		else
			change_visual(box)
		end
	end
end

-- замена визуала рюкзака
function change_visual(box)
	if box:section() == "m_inventory_box" then return end	-- пропускаем "свои" нычки
	
	local visual = "equipments\\item_rukzak" 				-- новичок - оригинальный визуал

	if ui_mm_opt_main.GetOption("transparent_treasure") then
		-- выбираем визуал
		local difficulty = level.get_game_difficulty()
		if     difficulty == 1 then
			visual = visual..tostring(math.random(1, 3)*10)
		elseif difficulty == 2 then
			visual = visual..tostring(math.random(3, 5)*10)
		elseif difficulty == 3 then
			visual = visual..tostring(math.random(5, 7)*10)
		end
	end
	
	-- меняем визуал
	local se_box = server_object(box:id())
	db.treasure_change_visual[se_box.id] = true
	local tbl = netpacket:get(se_box) 
	tbl.visual_name = visual
	netpacket:set(tbl, se_box, true) 

	-- отправляем в оффлайн и обратно для обновления визуала
	convert_visual[se_box.id]="turn_off"
end

function update()
	for k,v in pairs(convert_visual) do
		local box = level_object(k)
		local se_box = server_object(k)
		if se_box then
			if box ~= nil and v == "turn_off" then
				ai:set_switch_online(se_box.id, false)
				ai:set_switch_offline(se_box.id, true)
				convert_visual[k] = "turn_on"
			elseif box == nil and v == "turn_on" then
				if callbackFuncs[k] then --добавляем колбек
					level.client_spawn_manager():add(k,0,callbackFuncs[k].func,callbackFuncs[k].funcParams)
				end
				ai:set_switch_online(se_box.id, true)
				ai:set_switch_offline(se_box.id, true)
				convert_visual[k] = false
			elseif v == false then
				convert_visual[k] = nil
				callbackFuncs[k]=nil
			end
		else
			convert_visual[k] = nil
			callbackFuncs[k]=nil
		end
	end
end