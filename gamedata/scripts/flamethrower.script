--Функции для квеста на огнемёт.
local min_fuel = 150
local max_fuel = 300

function remove_spot()
 local sobj=story_object(481516)
 if sobj then
  level.map_remove_object_spot(sobj.id,"green_location")
 end
 local obj
 for a=1,65534 do
  obj = server_object(a)
  if obj then
   if obj:section_name()=="trubka" then
    level.map_remove_object_spot(obj.id,"red_location")
    break
   end
  end
 end
end

function good_bye(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	lost("af_fireball")
	lost("trubka")
	lost("gorelka")
	lost("manometr")
	lost("vodka", 10)
	lost("flamethrower_bad")
end

function have_10_vodka()
  return has("vodka",10)
end

function have_bablo()
	return db.actor:money()>=25000
end

function give_flamethrower_worked(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	got("wpn_flame")
  	lost_money(25000)
	clear_parts(first_speaker, second_speaker)
	if actor then
		local flame = actor:object("wpn_flame")
		if flame ~= nil then
			flame:set_ammo_elapsed(max_fuel)
		end
	end	
end

function clear_parts(first_speaker, second_speaker)	
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	local obj = trader:object("manometr")
	if obj ~= nil then
		release(server_object(obj:id()), true)
	end
	obj = trader:object("trubka")
	if obj ~= nil then
		release(server_object(obj:id()), true)
	end
	obj = trader:object("gorelka")
	if obj ~= nil then
		release(server_object(obj:id()), true)
	end
	obj = trader:object("flamethrower_bad")
	if obj ~= nil then
		release(server_object(obj:id()), true)
	end
	obj = trader:object("af_fireball")
	if obj ~= nil then
		release(server_object(obj:id()), true)
	end
end

function clear_fuel(first_speaker, second_speaker)	
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	trader:iterate_inventory( function (dummy,item)
	if item:section() == "amk_ballon" or item:section() == "amk_kanistra" or item:section() == "wpn_flame" then 
	  release(server_object(item:id()), true)
	end
	end, nil)
end

function spawn_parts()
	create("manometr", xyz(-146.01,6.04,-201.16), 91750, 621)
	create("trubka", xyz(-57.36,22.54,-120.73), 118492, 298)
end


function set_metka()
 local obj
 for a=1,65534 do
  obj = server_object(a)
  if obj then
   if obj:section_name()=="trubka" then
    amk.add_spot_on_map(obj.id,"red_location","Трубка")
    return
   end
  end
 end
end

function barman_have_exo()
	return has_good("monolit_exoskeleton",1) ~= false
end

function relocate_to_barman(first_speaker, second_speaker)
	got("gorelka")
	lost_good("monolit_exoskeleton",1)
end

function out_antirad(first_speaker, second_speaker)
	lost("antirad")
end

function transfer_deneg_blockpost(first_speaker, second_speaker)
    got_money(5000)
end

function give_flamethrower(first_speaker, second_speaker)
	got("flamethrower_bad")
end

function have_a_flamethrower_bad(stalker, player)
    return stalker:object ("flamethrower_bad") ~= nil
end

function give_1000(first_speaker, second_speaker)
    got_money(1000)
end

function have_a_antirad(stalker, player)
    return stalker:object ("antirad") ~= nil
end

function out_flamethrower(first_speaker, second_speaker)
	lost("flamethrower_bad")
    got_money(2500)
end


function have_a_fire_kolobok()
    local actor = db.actor
    if actor ~= nil and actor:object("af_fireball") ~= nil and actor:dont_has_info("flamethrower_quest_fireball") and actor:has_info("flamethrower_quest_start") then
		actor:give_info_portion("flamethrower_quest_fireball")
    end
end

function have_a_trubki()
    local actor = db.actor
    if actor ~= nil and actor:object("trubka") ~= nil and actor:dont_has_info("flamethrower_quest_trubki") then
		actor:give_info_portion("flamethrower_quest_trubki")
	end
end

function have_a_manometr()
    local actor = db.actor
    if actor ~= nil and actor:object("manometr") ~= nil and actor:dont_has_info("flamethrower_quest_manometr") then
		actor:give_info_portion("flamethrower_quest_manometr")
    end
end

function have_a_vodko()
    local actor = db.actor
    if actor ~= nil and actor:has_info("flamethrower_quest_start")
    then
		if has("vodka", 10) then
            actor:give_info_portion("flamethrower_quest_vodka")
		else
            actor:disable_info_portion("flamethrower_quest_vodka")
		end
    end
end

function have_a_gorelka()
    local actor = db.actor
    if actor ~= nil and actor:object("gorelka") ~= nil and actor:dont_has_info("flamethrower_quest_gorelka") then
		actor:give_info_portion("flamethrower_quest_gorelka")
    end
end

function have_a_gorelka2(stalker, player)
    return stalker:object ("gorelka") ~= nil
end

function have_a_manometr2(stalker, player)
    return stalker:object ("manometr") ~= nil
end

function have_a_trubka2(stalker, player)
    return stalker:object ("trubka") ~= nil
end

function have_a_af_fireball(stalker, player)
    return stalker:object ("af_fireball") ~= nil
end

function have_a_drink()
    local actor = db.actor
    if actor ~= nil and actor:object("vodka") ~= nil then
		return true
	end
	return false
end

function have_a_fuel()
	return have_a_ballon() and have_a_kanistra()
end

function have_30000()
	if db.actor and db.actor:money() >= 30000 then
		return true
	else
		return false
	end
end

function have_2000()
	if db.actor and db.actor:money() >= 2000 then
		return true
	else
		return false
	end
end

function have_a_ballon()
    local actor = db.actor
    if actor ~= nil and actor:object("amk_ballon") ~= nil then
		return true
	end
	return false
end

function have_a_kanistra()
    local actor = db.actor
    if actor ~= nil and actor:object("amk_kanistra") ~= nil then
		return true
	end
	return false
end

function have_a_flamethrower()
    local actor = db.actor
    if actor ~= nil and actor:object("wpn_flame") ~= nil then
		return true
	end
	return false
end

function metka_na_npc()
local obj = create("gar_stalker_flame_quest23",xyz(24.86,0.40,209.75),198510,359)
netpacket:modify(obj, "custom_data", "[logic]\nactive=walker\n[walker]\npath_walk = garb_tambovski_path\npath_look = garb_tambovski_look\non_info= {+find_815} nil\ncombat_ignore_cond=always", "story_id", 481516)
amk.add_spot_on_map(obj.id,'green_location','Лёха Тамбовский')
end



function start_work(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	amk.save_variable("flame_start", gtime)
	clear_parts(first_speaker, second_speaker)
end

function is_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("flame_start", gtime)
	if (gtime - ftime) >= 60*24 then
		return true
	else
		return false
	end
end

function not_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("flame_start", gtime)
	if (gtime - ftime) >= 60*24 then
		return false
	else
		return true
	end
end

function clear_ready(first_speaker, second_speaker)
	amk.del_variable("flame_start")
end

function start_reload(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	lost_money(2000)
	lost("vodka")	
	lost("wpn_flame")	
	local gtime = amk.game_minutes()
	amk.save_variable("flame_reload", gtime + 30)
	calc_reload(first_speaker, second_speaker)
	clear_flame(actor)
end

function start_find_and_reload(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	lost_money(30000)
	lost("vodka")	
	lost("wpn_flame")	
	local gtime = amk.game_minutes()
	amk.save_variable("flame_reload", gtime + math.random(12, 24) * 60)
	amk.save_variable("flame_reload_count", max_fuel)
	clear_flame(actor)
end

function is_reload_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("flame_reload", 0)
	if gtime >= ftime then
		return true
	else
		return false
	end
end

function is_reload_not_ready(first_speaker, second_speaker)
	local gtime = amk.game_minutes()
	local ftime = amk.load_variable("flame_reload", 0)
	if gtime <= ftime then
		return true
	else
		return false
	end
end

function is_reload_started(first_speaker, second_speaker)
	local ftime = amk.load_variable("flame_reload", -1)
	if ftime==-1 then
		return false
	else
		return true
	end
	end

function finish_reload(first_speaker, second_speaker)
	reload(first_speaker, second_speaker)
	clear_fuel(first_speaker, second_speaker)
	clear_reload(first_speaker, second_speaker)
end

function clear_reload(first_speaker, second_speaker)
	amk.del_variable("flame_reload")
	amk.del_variable("flame_reload_count")
end

function calc_reload(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
			if have_a_ballon() and have_a_kanistra() then
			local cnt_kanistra=0
			local cnt_ballon=0
		actor:iterate_inventory(function (dummy, item) if item:section()=="amk_kanistra" then cnt_kanistra=cnt_kanistra+1 end end, nil)
		actor:iterate_inventory(function (dummy, item) if item:section()=="amk_ballon" then cnt_ballon=cnt_ballon+1 end end, nil)
			local mm = math.min(cnt_kanistra, cnt_ballon)
			if mm == 1 then
			lost("amk_kanistra")
			lost("amk_ballon")
--rpm в конфиге 300, значит полминуты - 150, а минута 300.
			amk.save_variable("flame_reload_count", min_fuel)
			elseif mm >= 2 then
			lost("amk_kanistra", 2)
			lost("amk_ballon", 2)
			amk.save_variable("flame_reload_count", max_fuel)
		end
	end
			end

function reload(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	got("wpn_flame")
	amk.start_timer("set_flame_ammo", 0.2, amk.load_variable("flame_reload_count", 0))
end

function set_flame_ammo(ammo)
	local flame = db.actor:object("wpn_flame")
	if flame ~= nil then
		flame:set_ammo_elapsed(ammo)
	end
end

function clear_flame(person)
	if person and person:object("wpn_flame") then
		release(server_object(person:object("wpn_flame"):id()), true)
	end
end

function set_ammo(first_speaker, second_speaker)
	local actor, trader
	if db.actor and db.actor:id() == first_speaker:id() then
		actor = first_speaker
		trader = second_speaker
	else
		actor = second_speaker
		trader = first_speaker
	end
	if actor then
		local flame = actor:object("wpn_flame")
		if flame ~= nil then
			local ammo = amk.load_variable("flame_reload_count", 0)
			flame:set_ammo_elapsed(ammo)
		end
	end
	amk.del_variable("flame_reload_count")
end
