--//----------------------------------------
--//Автор: Singapur22 переписано Proper70
--//Дата выхода: 10.01.2010
--//-----------------------------------------
local db_arts = db.artefacts

-- В эту таблицу вписывать только секции, которые не начинаются с af_
local list_arts = {
	["5.45x39_izomorf"] = true,
	["5.45x39_izomorf_1"] = true,
	["7.62x54_izomorf"] = true,
	["amk_af_night_star"] = true,
	["ammo_zhekan_izomorf"] = true,
	["art_acumm"] = true,
	["izom_globus"] = true,
	["izomorf_kompas"] = true,
	["izomorf_kristal"] = true,
	["izomorf_plastilin"] = true,
	["kaktus_izomorf"] = true,
	["kostya_af_gold_fish"] = true,
	["linza_fotik"] = true,
	["osnova_fotik"] = true,
	["preplastilin"] = true,
	["psevdokristall"] = true,
	["pushka_fotik"] = true,
	["rukzak_izomorf"] = true,
	["wa2000_izomorf"] = true
}

local snd_obj = voice("ambient\\da_beep")
local need_del_spot = nil

function is_detected_art(section)
	return list_arts[section] or section:find("^af_")
end

function add_artefact(section, id)
    if db_arts[id]==nil and is_detected_art(section) then
		db_arts[id] = {spot = false, tim_beep = 0}
	end
end

function start_update()
	local art_cls = {
		[clsid.artefact] = true,
		[clsid.artefact_s] = true
	}
	local lvl_id = ai:level_id()
    local sobj
    for id = 1, 65534 do
	    sobj = server_object(id)
		-- Собираем в таблицу арты только на текущей территории
		if sobj and object_level(sobj) == lvl_id and art_cls[sobj:clsid()] then
			add_artefact(sobj:section_name(), id)
		end
	end
end

function update()
	if db.actor:item_in_slot("det_artefact_super",inventory_slots.DETECTOR_ARTS) and has_info("tel_dcity_kanaliy") then
		this.det_super()
		need_del_spot = true
	elseif db.actor:item_in_slot("detektor_amorf",inventory_slots.DETECTOR_ARTS) then
		this.det_izomorf()
		need_del_spot = true
	elseif db.actor:item_in_slot("det_artefact_indy",inventory_slots.DETECTOR_ARTS) then
		this.det_indy()
		need_del_spot = true
	elseif need_del_spot then
		this.iteration_del_spot()
		need_del_spot = nil
	end
end

function det_indy()
    local obj, dist
	local time_g = time_global()
    for k,v in pairs(db_arts) do
	    obj = level_object(k)
		if obj then
		    if not obj:parent() then
			--	if not_falling(obj) then
					dist = db.actor:position():distance_to_sqr(obj:position())
					if dist <= 40*40 and dist < time_g - v.tim_beep  then
						if not snd_obj:playing() then
							db_arts[k].tim_beep = time_g
							snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
						end
					else
						this.del_spot(k, v)
					end
			--	else
			--		break
			--	end
			else
			    this.del_spot(k, v)
			end
		end
	end
end

function det_izomorf()
    local obj, dist
	local time_g = time_global()
    for k,v in pairs(db_arts) do
	    obj = level_object(k)
		if obj then
		    if not obj:parent() then
			--	if not_falling(obj) then
					dist = db.actor:position():distance_to_sqr(obj:position())
					if dist < 60*60 then
						if not v.spot then
							level.map_add_object_spot(k, "artefact_location", game.translate_string(config:r_string(obj:section(), "inv_name")))
							db_arts[k].spot = true
						end
						if v.tim_beep < time_g and not snd_obj:playing() then
							db_arts[k].tim_beep = time_g + 2500
							snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
						end
					else
						this.del_spot(k, v)
					end
			--	else
			--		break
			--	end
			else
			    this.del_spot(k, v)
			end
		end
	end
end

function det_super()
    local sobj, dist
	local time_g = time_global()
    for k,v in pairs(db_arts) do
	    sobj = server_object(k)
		if sobj then
			if sobj.parent_id == 65535 then
			--	if not_falling_se(sobj) then
					if not v.spot then
						level.map_add_object_spot(k, "artefact_location", game.translate_string(config:r_string(sobj:section_name(), "inv_name")))
						db_arts[k].spot = true
					end
					dist = db.actor:position():distance_to_sqr(sobj.position)
					if dist < 60*60 then
						if v.tim_beep < time_g and not snd_obj:playing() then
							db_arts[k].tim_beep = time_g + 2500
							snd_obj:play_no_feedback(db.actor, sound_object.s2d, 0, vector(), 1.0)
						end
					end
			--	else
			--		break
			--	end
			else
				this.del_spot(k, v)
			end
		end
	end
end

function iteration_del_spot()
	local sobj
    for k,v in pairs(db_arts) do
		if v.spot then
	    	sobj = server_object(k)
			if sobj then
				this.del_spot(k, v)
			end
		end
	end
end

function del_spot(k, v)
    if v.spot then
		level.map_remove_object_spot(k, "artefact_location")
		db_arts[k].spot = false
	end
end

function not_falling(obj)
	local sobj = server_object(obj:id())
	
	if not sobj then
		-- серверный объект исчез - убираем из таблицы
		db_arts[obj:id()] = nil
		return false
	end
	
	if sobj.position:distance_to(obj:position())-sobj.position:distance_to_xz(obj:position()) > 10 then
		-- большая разница по высоте, скорее всего провалился, переспавниваем
		db_arts[sobj.id] = nil
		sobj = amk_anoms.respawn_falling_art(sobj)
		db_arts[sobj.id] = {spot = false, tim_beep = 0}
		
		return false
	end

	return true
end

function not_falling_se(sobj)
	local obj = level_object(sobj.id)
	
	if obj then
		return not_falling(obj)
	end
	
	return true
end
