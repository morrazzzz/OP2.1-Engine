--Vergas player

snd_obj = {}
snd_obj = voice([[ogg_player\flash_nil\sound_1]])

local lost_id = -1
local menu_show = false

--Таблица слотов
local slot_flash = {} 	--создаю таблицу
for  i = 1,16 do
	table.insert(slot_flash,0)	-- если 0 - флешки в слоте нет, 1 - флешка есть
end

local work_flash 		-- Рабочий слот: номер вставленной флешки. Если nil, то флешка не вставленна
local work_trek			-- Номер проигрываемого трека
if work_trek ==nil then
	work_trek = 0
end
local play_flag 
local flash_id = -1
local spawn_flash
local fleshka

-- устанавливаю первоначальный уровень громкости
local sound_vol
if sound_vol == nil then
	sound_vol = 0.6
end
-- устанавливаю первоначальное значение закольцовки
local ring = true
--if ring ==nil then
--	ring = false		-- по кругу не играет.
--end

function used_item()
	--Разбираемся с плеером
	if play_flag == 1  then	
		play_flag = 0
		used_player()
	end
	if (play_flag == 2) or (play_flag == nil)  then
		if lost_id > 0 then
			if not menu_show then
				if server_object(lost_id)==nil then
					used_player()
				else
					s_stop()
				end
			end	
		end
	end
	--Разбираемся с флешками
	if flash_id > 0 then
		if server_object(flash_id)==nil and not has_info("biznes_remove_special_item") then
			amk.spawn_item_in_inv(spawn_flash)		--Флешку "съели" и восстанавливаем её в инвенторе
			flash_id = -1
		else
			flash_id = -1			
			if work_flash ~= 0 then
				for i=1,16 do
					if work_flash == i then
						fleshka = "ogg_flash_"..i	
					end
				end
			end
			if spawn_flash == fleshka then	--выброшенная флешка в рабочем слоте плеера
				work_flash = nil			-- в рабочем слоте ничего нет
				s_stop()					-- отключается проигрываемый файл
				ring = false				-- отключаю воспроизведение по кругу
				work_trek_set(0)			-- никакой трек не проигрывается
				fleshka = nil
			end
		end
	end
	-- Разбираемся с закольцовкой
	if snd_obj:playing()==false then 
		if ring == true then
			if work_trek ~= 0 and work_trek ~= nil then
				if work_trek == 12 then
					work_trek = 1
				else
					work_trek = work_trek+1
				end
				s_play("ogg_player\\flash_"..tostring(work_flash).."\\sound_"..tostring(work_trek),work_trek)
			end
		end
	end

end

function used_player()
	-- Обрабатываю слоты флешек
	get_flash()
	--Открываю меню
	set_menu_show(true)
	lost_id = -1
	local spwn=ui_cheat_player.cheat(hud)
	level.start_stop_menu(spwn,true)
	set_menu_show(false)
end

function lose_item(obj)
	--потеря плеера
	if not menu_show then
		if obj:section() == "player" and not has_info("biznes_remove_special_item") then
			lost_id = obj:id()
		else
			lost_id = -1
		end
	end
	
	--Потеря флешек
	if not has_info("biznes_remove_special_item") then
		for i=1, 16 do
			local flash = "ogg_flash_"..i
			if obj:section() == flash then
				flash_id = obj:id()
				spawn_flash = flash
			end
		end
	end
end


function set_menu_show(t)
	menu_show = t
end

function set_play_flag(t)
	play_flag = t
end

function get_flash()
	--Проверяю наличие флешек в мешке
	for i = 1,16 do
		local flag_flash=db.actor:object("ogg_flash_"..i)
		if flag_flash == nil then
			--флешки 1 в мешке нет
			slot_flash[i] = 0
		else
			slot_flash[i] = 1
		end
	end

	-- Проверяю рабочий слот
	if work_flash ~= nil then			----------------ставлю nil вместо 0
		for i=1,16 do
			if work_flash == i then
				slot_flash[i] = 0
			end
		end
	end
end

function return_slot(t)
	if t == 0 then
		-- Рабочий слот
		t = work_flash
		return t
	end
	
	for i = 1,16 do
		if t == i then
		t = slot_flash[i]
		return t
		end	
	end
end

function set_show_flash(n)			-- n - номер флешки. Закрывает иконку флешки и перемешает флешку в рабочий слот
	if work_flash == nil then		-- рабочий слот пустой. Перемещаем флешку в рабочий слот
		for i = 1,16 do
			if n ==i then				
				slot_flash[i] = 0
			end
		end
	end
	work_flash = n
end

function work_flash_return()
	return work_flash
end

function sound_vol_return()
	return sound_vol
end

function sound_vol_set(n)
	sound_vol = n
	if snd_obj:playing()==true then
		snd_obj.volume = sound_vol
	end
end

function ring_return()
	return ring
end

function ring_set(n)
	ring = n
end

function work_trek_set(n)
	work_trek = n
end

function s_stop()

	disable_info("u_6")

	if snd_obj:playing()==true then 
		snd_obj:stop() 
	end
end

function s_play(path, trek)
	meceniy_outfit.is_pleer = true
	s_stop()
	snd_obj = voice(path)
	snd_obj.volume = sound_vol_return()
--	snd_obj:play_at_pos(db.actor, vector ():set (0, 0, 0), 0, sound_object.s2d)
	snd_obj:play(db.actor, 0, sound_object.s2d)
	work_trek_set(trek)
	
	give_info("u_6")
	if work_flash ~= nil then
		amk.save_variable("nomer_flexi", work_flash)
	end
	if trek ~= nil then
		if trek == 12 then
			amk.save_variable("nomer_treka", 1)
		else
			amk.save_variable("nomer_treka", trek + 1)
		end
	end

end

function start_pleer_post_save()
	if has_info("u_6") then
		if has("player") then
			if not is_pleer then 
				is_pleer = true
				player_ogg.work_flash =  amk.load_variable("nomer_flexi",nil) 	-- Рабочий слот: номер вставленной флешки. 	
				if player_ogg.work_flash ~= nil then
					if db.actor:object("ogg_flash_"..player_ogg.work_flash) then
						player_ogg.work_trek	 = amk.load_variable("nomer_treka",nil)	-- Номер проигрываемого трека
						if player_ogg.work_trek ~= nil then
							player_ogg.play_flag = 0
							player_ogg.set_show_flash(player_ogg.work_flash)
							player_ogg.ring = true		-- по кругу не играет.
							disable_info("u_6")
							player_ogg.s_play("ogg_player\\flash_"..tostring(player_ogg.work_flash).."\\sound_"..tostring(player_ogg.work_trek), player_ogg.work_trek)
						end
					end
				end
			end
		end
	end
	is_pleer = true
end
